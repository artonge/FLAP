# Custom log format. Just add lemon's remote user and requested host.
# HACK: Append $DOMAIN_NAME to avoid duplicate log format conflict.
log_format lemon_access_$DOMAIN_NAME '$remote_addr - $lmremote_user@$host - [$time_local] '
                    '"$request" $status '
                    '"$http_referer" "$http_user_agent" "$gzip_ratio"';
access_log /var/log/nginx/access.log lemon_access_$DOMAIN_NAME;

# Manager.
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name lemon.$DOMAIN_NAME;

	# Based on the list: https://en.wikipedia.org/wiki/Reserved_IP_addresses
	allow 127.0.0.0/8;
	allow 172.16.0.0/12;
	deny all;

	root /usr/share/lemonldap-ng/manager/htdocs/;

	if ($uri !~ ^/(.*\.psgi|static|doc|lib|javascript|favicon)) {
		rewrite ^/(.*)$ /manager.psgi/$1 break;
	}

	location ~ ^(?<sc>/.*\.psgi)(?:$|/) {
		include fastcgi_params;
		# Use resolver and variable to prevent nginx to crash when it does not found the upstream host.
		resolver 127.0.0.11 valid=30s;
		set $upstream_lemon lemon;
		fastcgi_pass $upstream_lemon:9000;
		fastcgi_param LLTYPE psgi;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_split_path_info ^(.*\.psgi)(/.*)$;
		fastcgi_param PATH_INFO $fastcgi_path_info;
	}

	location / {
		index manager.psgi;
		try_files $uri $uri/ =404;
		deny all;
	}

	location /doc/ {
		access_log off;
		alias /lemon-doc/;
		index index.html start.html;
	}

	location /lib/ {
		alias /lemon-doc/pages/documentation/current/lib/;
	}

	location /static/ {
		access_log off;
		alias /var/www/lemon/share/lemonldap-ng/manager/htdocs/static/;
	}

	location /javascript/ {
		access_log off;
		alias /var/www/lemon/share/javascript/;
	}
}

# Portal.
server {
	listen 443 ssl http2;
	listen [::]:443 ssl http2;

	server_name auth.$DOMAIN_NAME;

	root /usr/share/lemonldap-ng/portal/htdocs/;

	set_real_ip_from 127.0.0.1;
	real_ip_header   X-Forwarded-For;

	if ($uri !~ ^/((lemon_flapskin|static|javascript|logo).*|.*\.psgi)) {
		rewrite ^/(.*)$ /index.psgi/$1 break;
	}

	location ~ ^(/.*\.psgi)(?:$|/) {
		include fastcgi_params;
		# Use resolver and variable to prevent nginx to crash when it does not found the upstream host.
		resolver 127.0.0.11 valid=30s;
		set $upstream_lemon lemon;
		fastcgi_pass $upstream_lemon:9000;
		fastcgi_param LLTYPE psgi;
		fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
		fastcgi_split_path_info ^(.*\.psgi)(/.*)$;
		fastcgi_param PATH_INFO	$fastcgi_path_info;

		# This line also prevent using the default headers define in the main nginx config file.
		# This is good as we would have duplicates if we did so.
		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;

		# REST/SOAP functions for sessions management (disabled by default)
		location ~ ^/index.psgi/adminSessions {
			deny all;
		}

		# REST/SOAP functions for sessions access (disabled by default)
		# This is necessary for the Auth-Basic handler that needs to make REST requests to create sessions.
		location ~ ^/index.psgi/sessions {
			# Use resolver and variable to prevent nginx to crash when it does not found the upstream host.
			resolver 127.0.0.11 valid=30s;
			set $upstream_lemon lemon;
			fastcgi_pass $upstream_lemon:9000;

			allow 172.16.0.0/12;
			deny all;
		}

		# REST/SOAP functions for configuration access (disabled by default)
		location ~ ^/index.psgi/config {
			deny all;
		}

		# REST/SOAP functions for notification insertion (disabled by default)
		location ~ ^/index.psgi/notification {
			deny all;
		}
	}

	index index.psgi;
	location / {
		try_files $uri $uri/ =404;
	}

	location /static/ {
		access_log off;
		alias /var/www/lemon/share/lemonldap-ng/portal/htdocs/static/;
	}

	location /javascript/ {
		access_log off;
		alias /var/www/lemon/share/javascript/;
	}

	location /lemon_flapskin/ {
		access_log off;
		alias /var/www/lemon_flapskin/;
	}

	location =/logo.svg {
		access_log off;
		alias /var/www/logo.svg;
	}
}

# Reload.
server {
	listen 80;
	listen [::]:80;

	server_name reload.$DOMAIN_NAME;

	allow 127.0.0.0/8;
	allow 172.16.0.0/12;
	deny  all;

	root /var/www/html;

	location = /reload {
		include /etc/nginx/fastcgi_params;
		# Use resolver and variable to prevent nginx to crash when it does not found the upstream host.
		resolver 127.0.0.11 valid=30s;
		set $upstream_lemon lemon;
		fastcgi_pass $upstream_lemon:9000;
		fastcgi_param LLTYPE reload;
	}

	location / {
		deny all;
	}
}
