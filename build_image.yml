.build_docker:
    stage: build
    image: docker:stable
    services: ["docker:dind"]
    variables:
        # Until this issue is resolved: https://gitlab.com/gitlab-org/gitlab-runner/issues/1736
        GIT_STRATEGY: none
    rules:
      - if: '"$CI_PIPELINE_SOURCE" == "schedule" && "$SCHEDULED_BUILD" == "true"'
      - if: '"$CI_PIPELINE_SOURCE" == "tags"'
      - if: '"$CI_COMMIT_BRANCH" == "master"'
    script:
        # Connect to gitlab registry.
        - DOCKER_DRIVER=overlay2
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

        # Clone repository.
        - apk add git
        - cd $CI_BUILDS_DIR
        - rm -rf $CI_PROJECT_DIR
        - git clone $CI_REPOSITORY_URL $CI_PROJECT_DIR
        - cd $CI_PROJECT_DIR

        # Specify the target, current commit or latest tag if pipeline is scheduled.
        - TARGET=$CI_COMMIT_SHA
        - if [ "$TAGGED_REPO" == "true" ]; then TARGET=$(git tag --sort version:refname | grep flap | tail -1); fi
        - if [ "$TAGGED_REPO" == "true" ]; then VERSION_SCRIPT="git tag --sort version:refname | grep flap | tail -1"; fi

        # Checkout target.
        - git checkout $TARGET
        - git submodule update --init

        # Build image.
        - >
            docker build \
                --tag $CI_REGISTRY_IMAGE:$(eval $VERSION_SCRIPT)-$ARCH \
                --tag $CI_REGISTRY_IMAGE:latest-$ARCH \
                --file ${DOCKERFILE:-./Dockerfile} \
                ${BUILD_ARGS:-} \
                ./

        - docker push $CI_REGISTRY_IMAGE

build:amd64:
    extends: .build_docker
    tags: [docker, gce]
    variables:
        ARCH: amd64

build:armv7:
    extends: .build_docker
    tags: [docker, odroid]
    allow_failure: true
    variables:
        ARCH: armv7

create_manifest:
    only: [master, tags, schedules]
    image: docker:stable
    services: ["docker:dind"]
    script:
        - apk add jq git
        - mkdir -p /root/.docker
        - echo "{}" | jq '.experimental = "enabled"' > ~/.docker/config.json
        - docker login -u "$CI_REGISTRY_USER" -p "$CI_REGISTRY_PASSWORD" "$CI_REGISTRY"

        # Change VERSION_SCRIPT to be the latest tag if the pipeline is scheduled.
        - if [ "$TAGGED_REPO" == "true" ]; then VERSION_SCRIPT="git tag --sort version:refname | grep flap | tail -1"; fi

        - >
            docker manifest create \
                $CI_REGISTRY_IMAGE:$(eval $VERSION_SCRIPT) \
                $CI_REGISTRY_IMAGE:$(eval $VERSION_SCRIPT)-amd64 \
                $CI_REGISTRY_IMAGE:$(eval $VERSION_SCRIPT)-armv7
        - >
            docker manifest create \
                $CI_REGISTRY_IMAGE:latest \
                $CI_REGISTRY_IMAGE:latest-amd64 \
                $CI_REGISTRY_IMAGE:latest-armv7

        - "docker manifest push $CI_REGISTRY_IMAGE:$(eval $VERSION_SCRIPT)"
        - "docker manifest push $CI_REGISTRY_IMAGE:latest"

merge_upstream:
  image: alpine
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule" && $SCHEDULED_MERGE_UPSTREAM == "true"'
  script:
    - apk add git gnupg openssh-client

    - eval `ssh-agent -s`
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null # add ssh key
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - mv "$KNOWN_HOSTS" ~/.ssh/known_hosts
    - '[[ -f /.dockerenv ]] && echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config'

    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git config --global user.name "$GITLAB_USER_NAME"

    - url=${CI_PROJECT_URL//https:\/\//git@}
    - url=${url//gitlab.com\//gitlab.com:}
    - url=${url//git\//git}
    - git remote set-url origin "$url"

    - git fetch

    - git checkout "${CI_COMMIT_BRANCH:-flap_test}"

    - current_tag=$(git describe --tags --abbrev=0)
    - echo $current_tag

    - next_tag=$(git tag --sort version:refname | grep -v rc | grep -A 1 "$current_tag" | grep -v "$current_tag" | grep -v flap | cat)
    - echo $next_tag

    - if [ "$next_tag" == "" ]; then exit 0; fi

    - git rebase "$next_tag"
    - git tag "$next_tag-flap_test.1"

    - git push --force
    - git push --tag