version: "3"

services:
    # NGINX
    nginx:
        image: nginx
        restart: always
        volumes:
            - ./configs/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
            - ./configs/nginx/conf.d:/etc/nginx/conf.d:ro
            - /etc/ssl/nginx:/etc/ssl/nginx:ro
        depends_on:
            - seafile
            # - mastodon
            # - mastodon-sockets
            # - mastodon-cron
        ports:
            - "80:80"
            - "443:443"
        networks:
            - app-net

    # MARIADB
    mariadb:
        image: mariadb:10.3
        env_file: [./envs/mariadb.env]
        restart: always
        volumes:
            # - ./data/mariadb:/var/lib/mariadb
            - ./scripts/mariadb/setup.sql:/docker-entrypoint-initdb.d/setup.sql
        networks:
            store-net:
                aliases: [mariadb]

    # POSTGRESQL
    postgresql:
        image: postgres:11.1
        env_file: [./envs/postgresql.env]
        restart: always
        volumes:
            # - ./data/postgresql:/var/lib/postgresql/data
            - ./scripts/postgresql/setup.sql:/docker-entrypoint-initdb.d/setup.sql
        networks:
            store-net:
                aliases: [postgresql]

    # REDIS
    redis:
        image: redis:5.0
        restart: always
        volumes:
            - ./configs/redis/redis.conf:/etc/redis/redis.conf:ro
        networks:
            store-net:
                aliases: [redis]

    # LDAP
    ldap:
        image: osixia/openldap:1.2.2
        restart: always
        volumes:
            - ./data/slapd/database:/var/lib/ldap
            - ./data/slapd/config:/etc/ldap/slapd.d
        networks:
            store-net:
                aliases: [ldap]

    # SEAFILE
    seafile:
        build:
            context: .
            dockerfile: dockerfiles/seafile/Dockerfile
        env_file: [./envs/seafile.env]
        restart: always
        depends_on: [mariadb]
        ports:
            - "8000:8000"
            - "8082:8082"
        volumes:
            - ./data/seafile:/shared
            # - ./config/seafile/conf:shared/seafile/conf
        networks:
            store-net:
            app-net:
                aliases: [seafile]

    # OPENHAB
    openhab:
        image: openhab/openhab:2.3.0
        env_file: [./envs/openhab.env]
        restart: always
        # depends_on: [mongodb]
        volumes:
            # - /etc/localtime:/etc/localtime:ro
            # - /etc/timezone:/etc/timezone:ro
            - ./data/openhab/userdata:/openhab/userdata
            - ./data/openhab/addons:/openhab/addons
            - ./data/openhab/openhab:/openhab/conf
        networks:
            store-net:
            app-net:
                aliases: [openhab]

    # MASTODON
    # mastodon:
    #     image: tootsuite/mastodon:v2.6.5
    #     restart: always
    #     env_file: ./envs/mastodon.env
    #     command: bash -c "rm -f /mastodon/tmp/pids/server.pid; bundle exec rails s -p 3000 -b '0.0.0.0'"
    #     depends_on: [postgresql, redis]
    #     volumes:
    #         - ./public/system:/mastodon/public/system
    #     networks:
    #         store-net:
    #         app-net:
    #             aliases: [mastodon]
    #
    # mastodon-sockets:
    #     image: tootsuite/mastodon:v2.6.5
    #     restart: always
    #     env_file: ./envs/mastodon.env
    #     command: yarn start
    #     depends_on: [postgresql, redis]
    #     networks:
    #         store-net:
    #         app-net:
    #             aliases: [mastodon-sockets]
    #
    # mastodon-cron:
    #     image: tootsuite/mastodon:v2.6.5
    #     command: bundle exec sidekiq
    #     restart: always
    #     env_file: ./envs/mastodon.env
    #     volumes:
    #         - ./public/system:/mastodon/public/system
    #     depends_on: [postgresql, redis]
    #     networks:
    #         store-net:
    #         app-net:
    #             aliases: [mastodon-cron]

networks:
    app-net:
    store-net:
        internal: true
